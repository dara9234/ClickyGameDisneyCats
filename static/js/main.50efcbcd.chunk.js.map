{"version":3,"sources":["components/CatCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Navbar/index.js","App.js","index.js"],"names":["CatCard","props","react_default","a","createElement","className","onClick","randomImages","id","alt","name","src","image","Wrapper","children","Title","Navbar","this","score","topscore","Component","App","state","cats","map","catsObject","clicked","_this","setState","sort","Math","random","_this2","components_Wrapper","components_Navbar","components_Title","cat","components_CatCard","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"ilDAiBeA,MAbf,SAAiBC,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMC,QAAS,kBAAML,EAAMM,aAAaN,EAAMO,MAC3DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,MAAMI,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,MAAOJ,GAAMP,EAAMO,cCD9DK,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCY1BC,MAbf,SAAed,GACb,OAAOC,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,EAAMa,UAC9BZ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,4CACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,mDACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,yDACJF,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,uCCOIY,0LAZX,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAY,cAEfH,EAAAC,EAAAC,cAAA,qBAAaa,KAAKhB,MAAMiB,OACxBhB,EAAAC,EAAAC,cAAA,yBAAiBa,KAAKhB,MAAMkB,kBANfC,cC6DNC,6MAtDbC,MAAQ,CACNC,OACAJ,SAAU,EACVD,MAAO,KAIXX,aAAe,SAAAC,GAEXe,EAAKC,IAAI,SAAAC,GAEP,OAAIjB,IAAOiB,EAAWjB,MACO,IAAvBiB,EAAWC,SAGbD,EAAWC,SAAU,EACrBC,EAAKC,SAAS,CAAEV,MAAOS,EAAKL,MAAMJ,MAAQ,EAAGC,SAAUQ,EAAKL,MAAMH,SAAW,EAAGI,UACxE,IAGRI,EAAKC,SAAS,CAACV,MAAO,KACf,MAObK,EAAKM,KAAK,kBAAMC,KAAKC,SAAW,8EAI1B,IAAAC,EAAAf,KACR,OACEf,EAAAC,EAAAC,cAAC6B,EAAD,KACE/B,EAAAC,EAAAC,cAAC8B,EAAD,CACEhB,MAAOD,KAAKK,MAAMJ,MAClBC,SAAUF,KAAKK,MAAMH,WAEvBjB,EAAAC,EAAAC,cAAC+B,EAAD,6BACClB,KAAKK,MAAMC,KAAKC,IAAI,SAAAY,GAAG,OACtBlC,EAAAC,EAAAC,cAACiC,EAAD,CACE9B,aAAcyB,EAAKzB,aACnBC,GAAI4B,EAAI5B,GACR8B,IAAKF,EAAI5B,GACTE,KAAM0B,EAAI1B,KACVE,MAAOwB,EAAIxB,kBAhDHQ,aCFlBmB,IAASC,OAAOtC,EAAAC,EAAAC,cAACqC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.50efcbcd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./CatCard.css\";\n\n\nfunction CatCard(props) {\n  return (\n    <div className=\"cat\" onClick={() => props.randomImages(props.id)}>\n      <div className=\"img-container\" >\n        <img className =\"img\" alt={props.name} src={props.image} id = {props.id} />\n      </div>\n     \n        \n    \n    </div>\n  );\n}\n\nexport default CatCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Title.css\";\n\nfunction Title(props) {\n  return <div>\n    <div className=\"title\">{props.children}</div>\n    <ol>\n      <li><strong>Click Any Image To Start!</strong></li>\n      <li><strong>You score on every unique click.</strong></li>\n      <li><strong>So don't click the same image twice!!!</strong></li>\n      <li> <strong>HAVE FUN!!</strong></li>\n\n    </ol>\n  </div>\n}\n\nexport default Title;\n","import React, {Component} from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className = \"nav navbar\">\r\n        \r\n        <h2> Score: {this.props.score}</h2>\r\n        <h2> Top Score: {this.props.topscore}</h2>\r\n       \r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\nexport default Navbar;\r\n    \r\n\r\n    \r\n\r\n   ","import React, { Component } from \"react\";\nimport CatCard from \"./components/CatCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport cats from \"./cats.json\";\nimport Navbar from \"./components/Navbar\";\n\n\nclass App extends Component {\n  // Setting this.state.cats to the cats json array\n  state = {\n    cats,\n    topscore: 0,\n    score: 0,\n    \n  };\n\nrandomImages = id => {\n\n    cats.map(catsObject => {\n\n      if (id === catsObject.id) {\n        if (catsObject.clicked === false) {\n\n          // alert(\"found false\");\n          catsObject.clicked = true;\n          this.setState({ score: this.state.score + 1, topscore: this.state.topscore + 1, cats });\n          return  false;\n        }\n        else {\n          this.setState({score: 0});\n          return true;\n        }\n      }\n\n      return  true;\n\n    });\n    cats.sort(() => Math.random() - 0.5);\n  };\n  \n // Map over this.state.friends and render a FriendCard component for each friend object\n render() {\n  return (\n    <Wrapper>\n      <Navbar\n        score={this.state.score}\n        topscore={this.state.topscore}\n      />\n      <Title>Disney's Famous Cats</Title>\n      {this.state.cats.map(cat => (\n        <CatCard\n          randomImages={this.randomImages}\n          id={cat.id}\n          key={cat.id}\n          name={cat.name}\n          image={cat.image}\n        />\n      ))}\n    </Wrapper>\n   );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}